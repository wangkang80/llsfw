环境搭建步骤:

	1.建立maven项目后更改pom.xml,添加如下信息
		<plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
                <source>1.6</source>
                <target>1.6</target>
            </configuration>
        </plugin>
		<plugin>
		    <groupId>org.apache.maven.plugins</groupId>
		    <artifactId>maven-war-plugin</artifactId>
		    <version>2.4</version>
		    <configuration>
		        <overlays>
		            <overlay>
		                <groupId>llsfw</groupId>
		                <artifactId>llsfw</artifactId>
		            </overlay>
		        </overlays>
		    </configuration>
		</plugin>
		引用llsfw的web项目
	
	2.更改pom.xml文件,添加如下信息:
	
		<!-- servlet-api -->
        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-servlet-api</artifactId>
            <version>7.0.52</version>
            <scope>provided</scope>
        </dependency>
	
		<dependency>
            <groupId>llsfw</groupId>
            <artifactId>llsfw-core</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>llsfw</groupId>
            <artifactId>llsfw</artifactId>
            <version>0.0.1-SNAPSHOT</version>
            <type>war</type>
        </dependency>
		添加对llsfw项目的依赖
		
	3.更改pom.xml文件,添加如下信息:
		<dependency>
		    <groupId>com.oracle</groupId>
		    <artifactId>ojdbc6</artifactId>
		    <version>11.2.0.1.0</version>
		</dependency>
		添加对oracle的支持
		llsfw默认支持数据库 oracle 11G , H2
		
	4.配置web.xml,参考llsfw的web.xml,标记(必须)的节点一定要配置
	
	5.执行数据库脚本 llsfw-core-db 和 quartz-2.2.1
	
	到这里为止项目应该能够正常启动

使用配置详解:

	1.创建包结构:
		src/main/java
			com.公司名.项目名
				aspectj[切面类]
				common[公共类,常量]
				exception[异常封装]
				listener[监听器]
				security[安全框架]
				ws[webservice]
					XXXXX[分割模块]
				interceptors
				controller[控制器]
					XXXXX[分割模块]
				mapper[dao接口]
					daoExpand[扩展]
					daoStandard[标准]
				model[模型]
					expand[扩展]
					standard[标准]
				scheduler[计划任务]
					XXXXX[分割模块]
				service[业务逻辑服务]
					XXXXX[分割模块]
				sqlMap[sqlMap配置文件]
					sqlMapExpand[扩展]
					sqlMapStandard[标准]
					
		llsfw自动扫描的包结构:
			com.*.*.controller[控制器]
			com.*.*.service[业务逻辑,有事务覆盖]
			com/*/*/sqlMap/sqlMapStandard/*.xml[数据库访问]
			com/*/*/sqlMap/sqlMapExpand/*.xml[数据库访问]
			com.*.*.mapper.daoStandard[数据库访问]
			com.*.*.mapper.daoExpand[数据库访问]
			
	2.	配置文件详解
			如下是llsfw的配置文件结构:
			src/main/resources
				llsfw[私有配置文件,不可更改]
				logback.xml[公有配置文件,日志]
				resources.properties[公有配置文件,系统属性]
				spring-scheduler.xml[公有配置文件,计划任务]
				spring-systemParam.xml[公有配置文件,系统参数]
		要求在正常情况下,只更改[公有配置文件],更改方式是拷贝llsfw相应的文件到项目下(要求路径相同),
		然后进行更改(建议只进行修改和添加的操作,不要删除配置).
		
		